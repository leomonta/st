diff --git a/curr/config.def.h b/other/config.def.h
index 91ab8ca..b4ad8a6 100644
--- a/curr/config.def.h
+++ b/other/config.def.h
@@ -9,17 +9,15 @@ static char *font = "Liberation Mono:pixelsize=12:antialias=true:autohint=true";
 static int borderpx = 2;
 
 /*
- * What program is execed by st depends of these precedence rules:
+ * What program is execed by st-wl depends of these precedence rules:
  * 1: program passed with -e
- * 2: scroll and/or utmp
+ * 2: utmp option
  * 3: SHELL environment variable
  * 4: value of shell in /etc/passwd
  * 5: value of shell in config.h
  */
 static char *shell = "/bin/sh";
 char *utmp = NULL;
-/* scroll program: to enable use a string like "scroll" */
-char *scroll = NULL;
 char *stty_args = "stty raw pass8 nl -echo -iexten -cstopb 38400";
 
 /* identification sequence returned in DA and DECID */
@@ -43,18 +41,9 @@ static unsigned int tripleclicktimeout = 600;
 /* alt screens */
 int allowaltscreen = 1;
 
-/* allow certain non-interactive (insecure) window operations such as:
-   setting the clipboard text */
-int allowwindowops = 0;
-
-/*
- * draw latency range in ms - from new content/keypress/etc until drawing.
- * within this range, st draws when content stops arriving (idle). mostly it's
- * near minlatency, but it waits longer for slow updates to avoid partial draw.
- * low minlatency will tear/flicker more, as it can "detect" idle too early.
- */
-static double minlatency = 8;
-static double maxlatency = 33;
+/* key repeat timeouts (in milliseconds) */
+static unsigned int keyrepeatdelay = 500;
+static unsigned int keyrepeatinterval = 25;
 
 /*
  * blinking timeout (set to 0 to disable blinking) for the terminal blinking
@@ -74,54 +63,52 @@ static unsigned int cursorthickness = 2;
 static int bellvolume = 0;
 
 /* default TERM value */
-char *termname = "st-256color";
+char *termname = "st-wl-256color";
 
 /*
  * spaces per tab
  *
  * When you are changing this value, don't forget to adapt the »it« value in
- * the st.info and appropriately install the st.info in the environment where
- * you use this st version.
+ * the st-wl.info and appropriately install the st-wl.info in the environment
+ * where you use this st-wl version.
  *
- *	it#$tabspaces,
+ *  it#$tabspaces,
  *
  * Secondly make sure your kernel is not expanding tabs. When running `stty
  * -a` »tab0« should appear. You can tell the terminal to not expand tabs by
  *  running following command:
  *
- *	stty tabs
+ *  stty tabs
  */
 unsigned int tabspaces = 8;
 
 /* Terminal colors (16 first used in escape sequence) */
 static const char *colorname[] = {
-	/* 8 normal colors */
-	"black",
-	"red3",
-	"green3",
-	"yellow3",
-	"blue2",
-	"magenta3",
-	"cyan3",
-	"gray90",
-
-	/* 8 bright colors */
-	"gray50",
-	"red",
-	"green",
-	"yellow",
-	"#5c5cff",
-	"magenta",
-	"cyan",
-	"white",
-
-	[255] = 0,
-
-	/* more colors can be added after 255 to use with DefaultXX */
-	"#cccccc",
-	"#555555",
-	"gray90", /* default foreground colour */
-	"black", /* default background colour */
+    /* 8 normal colors */
+    "black",
+    "red3",
+    "green3",
+    "yellow3",
+    "blue2",
+    "magenta3",
+    "cyan3",
+    "gray90",
+
+    /* 8 bright colors */
+    "gray50",
+    "red",
+    "green",
+    "yellow",
+    "#5c5cff",
+    "magenta",
+    "cyan",
+    "white",
+
+    [255] = 0,
+
+    /* more colors can be added after 255 to use with DefaultXX */
+    "#cccccc",
+    "#555555",
 };
 
 
@@ -129,9 +116,9 @@ static const char *colorname[] = {
  * Default colors (colorname index)
  * foreground, background, cursor, reverse cursor
  */
-unsigned int defaultfg = 258;
-unsigned int defaultbg = 259;
-unsigned int defaultcs = 256;
+unsigned int defaultfg = 7;
+unsigned int defaultbg = 0;
+static unsigned int defaultcs = 256;
 static unsigned int defaultrcs = 257;
 
 /*
@@ -151,11 +138,9 @@ static unsigned int cols = 80;
 static unsigned int rows = 24;
 
 /*
- * Default colour and shape of the mouse cursor
+ * Default shape of the mouse cursor
  */
-static unsigned int mouseshape = XC_xterm;
-static unsigned int mousefg = 7;
-static unsigned int mousebg = 0;
+static char mouseshape[] = "xterm";
 
 /*
  * Color used to display font attributes when fontconfig selected a font which
@@ -163,52 +148,47 @@ static unsigned int mousebg = 0;
  */
 static unsigned int defaultattr = 11;
 
-/*
- * Force mouse select/shortcuts while mask is active (when MODE_MOUSE is set).
- * Note that if you want to use ShiftMask with selmasks, set this to an other
- * modifier, set to 0 to not use it.
- */
-static uint forcemousemod = ShiftMask;
-
 /*
  * Internal mouse shortcuts.
  * Beware that overloading Button1 will disable the selection.
  */
 static MouseShortcut mshortcuts[] = {
-	/* mask                 button   function        argument       release */
-	{ XK_ANY_MOD,           Button2, selpaste,       {.i = 0},      1 },
-	{ ShiftMask,            Button4, ttysend,        {.s = "\033[5;2~"} },
-	{ XK_ANY_MOD,           Button4, ttysend,        {.s = "\031"} },
-	{ ShiftMask,            Button5, ttysend,        {.s = "\033[6;2~"} },
-	{ XK_ANY_MOD,           Button5, ttysend,        {.s = "\005"} },
+    /* button               mask            string */
+    { -1,                   MOD_MASK_NONE,  "" }
+};
+
+static Axiskey ashortcuts[] = {
+    /* axis         direction   mask        string */
+    { AXIS_VERTICAL,    +1,     MOD_MASK_ANY,   "\031"},
+    { AXIS_VERTICAL,    -1,     MOD_MASK_ANY,   "\005"},
 };
 
 /* Internal keyboard shortcuts. */
-#define MODKEY Mod1Mask
-#define TERMMOD (ControlMask|ShiftMask)
+#define MODKEY MOD_MASK_ALT
+#define TERMMOD (MOD_MASK_CTRL|MOD_MASK_SHIFT)
 
 static Shortcut shortcuts[] = {
-	/* mask                 keysym          function        argument */
-	{ XK_ANY_MOD,           XK_Break,       sendbreak,      {.i =  0} },
-	{ ControlMask,          XK_Print,       toggleprinter,  {.i =  0} },
-	{ ShiftMask,            XK_Print,       printscreen,    {.i =  0} },
-	{ XK_ANY_MOD,           XK_Print,       printsel,       {.i =  0} },
-	{ TERMMOD,              XK_Prior,       zoom,           {.f = +1} },
-	{ TERMMOD,              XK_Next,        zoom,           {.f = -1} },
-	{ TERMMOD,              XK_Home,        zoomreset,      {.f =  0} },
-	{ TERMMOD,              XK_C,           clipcopy,       {.i =  0} },
-	{ TERMMOD,              XK_V,           clippaste,      {.i =  0} },
-	{ TERMMOD,              XK_Y,           selpaste,       {.i =  0} },
-	{ ShiftMask,            XK_Insert,      selpaste,       {.i =  0} },
-	{ TERMMOD,              XK_Num_Lock,    numlock,        {.i =  0} },
+    /* mask                 keysym            function        argument */
+    { MOD_MASK_ANY,         XKB_KEY_Break,    sendbreak,      {.i =  0} },
+    { MOD_MASK_CTRL,        XKB_KEY_Print,    toggleprinter,  {.i =  0} },
+    { MOD_MASK_SHIFT,       XKB_KEY_Print,    printscreen,    {.i =  0} },
+    { MOD_MASK_ANY,         XKB_KEY_Print,    printsel,       {.i =  0} },
+    { TERMMOD,              XKB_KEY_Prior,    zoom,           {.f = +1} },
+    { TERMMOD,              XKB_KEY_Next,     zoom,           {.f = -1} },
+    { TERMMOD,              XKB_KEY_Home,     zoomreset,      {.f =  0} },
+    { TERMMOD,              XKB_KEY_C,        clipcopy,       {.i =  0} },
+    { TERMMOD,              XKB_KEY_V,        clippaste,      {.i =  0} },
+    { TERMMOD,              XKB_KEY_Y,        selpaste,       {.i =  0} },
+    { MOD_MASK_SHIFT,       XKB_KEY_Insert,   selpaste,       {.i =  0} },
+    { TERMMOD,              XKB_KEY_Num_Lock, numlock,        {.i =  0} },
 };
 
 /*
  * Special keys (change & recompile st.info accordingly)
  *
  * Mask value:
- * * Use XK_ANY_MOD to match the key no matter modifiers state
- * * Use XK_NO_MOD to match the key alone (no modifiers)
+ * * Use MOD_MASK_ANY to match the key no matter modifiers state
+ * * Use MOD_MASK_NONE to match the key alone (no modifiers)
  * appkey value:
  * * 0: no value
  * * > 0: keypad application mode enabled
@@ -218,9 +198,13 @@ static Shortcut shortcuts[] = {
  * * 0: no value
  * * > 0: cursor application mode enabled
  * * < 0: cursor application mode disabled
+ * crlf value
+ * * 0: no value
+ * * > 0: crlf mode is enabled
+ * * < 0: crlf mode is disabled
  *
  * Be careful with the order of the definitions because st searches in
- * this table sequentially, so any XK_ANY_MOD must be in the last
+ * this table sequentially, so any MOD_MASK_ANY must be in the last
  * position for a key.
  */
 
@@ -228,229 +212,233 @@ static Shortcut shortcuts[] = {
  * If you want keys other than the X11 function keys (0xFD00 - 0xFFFF)
  * to be mapped below, add them to this array.
  */
-static KeySym mappedkeys[] = { -1 };
+static xkb_keysym_t mappedkeys[] = { -1 };
 
 /*
  * State bits to ignore when matching key or button events.  By default,
- * numlock (Mod2Mask) and keyboard layout (XK_SWITCH_MOD) are ignored.
+ * numlock (Mod2Mask) and keyboard layout (XKB_KEY_SWITCH_MOD) are ignored.
+ */
+static uint ignoremod = 0;
+
+/*
+ * Override mouse-select while mask is active (when MODE_MOUSE is set).
+ * Note that if you want to use MOD_MASK_SHIFT with selmasks, set this to an other
+ * modifier, set to 0 to not use it.
  */
-static uint ignoremod = Mod2Mask|XK_SWITCH_MOD;
+static uint forceselmod = MOD_MASK_SHIFT;
 
 /*
  * This is the huge key array which defines all compatibility to the Linux
  * world. Please decide about changes wisely.
  */
 static Key key[] = {
-	/* keysym           mask            string      appkey appcursor */
-	{ XK_KP_Home,       ShiftMask,      "\033[2J",       0,   -1},
-	{ XK_KP_Home,       ShiftMask,      "\033[1;2H",     0,   +1},
-	{ XK_KP_Home,       XK_ANY_MOD,     "\033[H",        0,   -1},
-	{ XK_KP_Home,       XK_ANY_MOD,     "\033[1~",       0,   +1},
-	{ XK_KP_Up,         XK_ANY_MOD,     "\033Ox",       +1,    0},
-	{ XK_KP_Up,         XK_ANY_MOD,     "\033[A",        0,   -1},
-	{ XK_KP_Up,         XK_ANY_MOD,     "\033OA",        0,   +1},
-	{ XK_KP_Down,       XK_ANY_MOD,     "\033Or",       +1,    0},
-	{ XK_KP_Down,       XK_ANY_MOD,     "\033[B",        0,   -1},
-	{ XK_KP_Down,       XK_ANY_MOD,     "\033OB",        0,   +1},
-	{ XK_KP_Left,       XK_ANY_MOD,     "\033Ot",       +1,    0},
-	{ XK_KP_Left,       XK_ANY_MOD,     "\033[D",        0,   -1},
-	{ XK_KP_Left,       XK_ANY_MOD,     "\033OD",        0,   +1},
-	{ XK_KP_Right,      XK_ANY_MOD,     "\033Ov",       +1,    0},
-	{ XK_KP_Right,      XK_ANY_MOD,     "\033[C",        0,   -1},
-	{ XK_KP_Right,      XK_ANY_MOD,     "\033OC",        0,   +1},
-	{ XK_KP_Prior,      ShiftMask,      "\033[5;2~",     0,    0},
-	{ XK_KP_Prior,      XK_ANY_MOD,     "\033[5~",       0,    0},
-	{ XK_KP_Begin,      XK_ANY_MOD,     "\033[E",        0,    0},
-	{ XK_KP_End,        ControlMask,    "\033[J",       -1,    0},
-	{ XK_KP_End,        ControlMask,    "\033[1;5F",    +1,    0},
-	{ XK_KP_End,        ShiftMask,      "\033[K",       -1,    0},
-	{ XK_KP_End,        ShiftMask,      "\033[1;2F",    +1,    0},
-	{ XK_KP_End,        XK_ANY_MOD,     "\033[4~",       0,    0},
-	{ XK_KP_Next,       ShiftMask,      "\033[6;2~",     0,    0},
-	{ XK_KP_Next,       XK_ANY_MOD,     "\033[6~",       0,    0},
-	{ XK_KP_Insert,     ShiftMask,      "\033[2;2~",    +1,    0},
-	{ XK_KP_Insert,     ShiftMask,      "\033[4l",      -1,    0},
-	{ XK_KP_Insert,     ControlMask,    "\033[L",       -1,    0},
-	{ XK_KP_Insert,     ControlMask,    "\033[2;5~",    +1,    0},
-	{ XK_KP_Insert,     XK_ANY_MOD,     "\033[4h",      -1,    0},
-	{ XK_KP_Insert,     XK_ANY_MOD,     "\033[2~",      +1,    0},
-	{ XK_KP_Delete,     ControlMask,    "\033[M",       -1,    0},
-	{ XK_KP_Delete,     ControlMask,    "\033[3;5~",    +1,    0},
-	{ XK_KP_Delete,     ShiftMask,      "\033[2K",      -1,    0},
-	{ XK_KP_Delete,     ShiftMask,      "\033[3;2~",    +1,    0},
-	{ XK_KP_Delete,     XK_ANY_MOD,     "\033[P",       -1,    0},
-	{ XK_KP_Delete,     XK_ANY_MOD,     "\033[3~",      +1,    0},
-	{ XK_KP_Multiply,   XK_ANY_MOD,     "\033Oj",       +2,    0},
-	{ XK_KP_Add,        XK_ANY_MOD,     "\033Ok",       +2,    0},
-	{ XK_KP_Enter,      XK_ANY_MOD,     "\033OM",       +2,    0},
-	{ XK_KP_Enter,      XK_ANY_MOD,     "\r",           -1,    0},
-	{ XK_KP_Subtract,   XK_ANY_MOD,     "\033Om",       +2,    0},
-	{ XK_KP_Decimal,    XK_ANY_MOD,     "\033On",       +2,    0},
-	{ XK_KP_Divide,     XK_ANY_MOD,     "\033Oo",       +2,    0},
-	{ XK_KP_0,          XK_ANY_MOD,     "\033Op",       +2,    0},
-	{ XK_KP_1,          XK_ANY_MOD,     "\033Oq",       +2,    0},
-	{ XK_KP_2,          XK_ANY_MOD,     "\033Or",       +2,    0},
-	{ XK_KP_3,          XK_ANY_MOD,     "\033Os",       +2,    0},
-	{ XK_KP_4,          XK_ANY_MOD,     "\033Ot",       +2,    0},
-	{ XK_KP_5,          XK_ANY_MOD,     "\033Ou",       +2,    0},
-	{ XK_KP_6,          XK_ANY_MOD,     "\033Ov",       +2,    0},
-	{ XK_KP_7,          XK_ANY_MOD,     "\033Ow",       +2,    0},
-	{ XK_KP_8,          XK_ANY_MOD,     "\033Ox",       +2,    0},
-	{ XK_KP_9,          XK_ANY_MOD,     "\033Oy",       +2,    0},
-	{ XK_Up,            ShiftMask,      "\033[1;2A",     0,    0},
-	{ XK_Up,            Mod1Mask,       "\033[1;3A",     0,    0},
-	{ XK_Up,         ShiftMask|Mod1Mask,"\033[1;4A",     0,    0},
-	{ XK_Up,            ControlMask,    "\033[1;5A",     0,    0},
-	{ XK_Up,      ShiftMask|ControlMask,"\033[1;6A",     0,    0},
-	{ XK_Up,       ControlMask|Mod1Mask,"\033[1;7A",     0,    0},
-	{ XK_Up,ShiftMask|ControlMask|Mod1Mask,"\033[1;8A",  0,    0},
-	{ XK_Up,            XK_ANY_MOD,     "\033[A",        0,   -1},
-	{ XK_Up,            XK_ANY_MOD,     "\033OA",        0,   +1},
-	{ XK_Down,          ShiftMask,      "\033[1;2B",     0,    0},
-	{ XK_Down,          Mod1Mask,       "\033[1;3B",     0,    0},
-	{ XK_Down,       ShiftMask|Mod1Mask,"\033[1;4B",     0,    0},
-	{ XK_Down,          ControlMask,    "\033[1;5B",     0,    0},
-	{ XK_Down,    ShiftMask|ControlMask,"\033[1;6B",     0,    0},
-	{ XK_Down,     ControlMask|Mod1Mask,"\033[1;7B",     0,    0},
-	{ XK_Down,ShiftMask|ControlMask|Mod1Mask,"\033[1;8B",0,    0},
-	{ XK_Down,          XK_ANY_MOD,     "\033[B",        0,   -1},
-	{ XK_Down,          XK_ANY_MOD,     "\033OB",        0,   +1},
-	{ XK_Left,          ShiftMask,      "\033[1;2D",     0,    0},
-	{ XK_Left,          Mod1Mask,       "\033[1;3D",     0,    0},
-	{ XK_Left,       ShiftMask|Mod1Mask,"\033[1;4D",     0,    0},
-	{ XK_Left,          ControlMask,    "\033[1;5D",     0,    0},
-	{ XK_Left,    ShiftMask|ControlMask,"\033[1;6D",     0,    0},
-	{ XK_Left,     ControlMask|Mod1Mask,"\033[1;7D",     0,    0},
-	{ XK_Left,ShiftMask|ControlMask|Mod1Mask,"\033[1;8D",0,    0},
-	{ XK_Left,          XK_ANY_MOD,     "\033[D",        0,   -1},
-	{ XK_Left,          XK_ANY_MOD,     "\033OD",        0,   +1},
-	{ XK_Right,         ShiftMask,      "\033[1;2C",     0,    0},
-	{ XK_Right,         Mod1Mask,       "\033[1;3C",     0,    0},
-	{ XK_Right,      ShiftMask|Mod1Mask,"\033[1;4C",     0,    0},
-	{ XK_Right,         ControlMask,    "\033[1;5C",     0,    0},
-	{ XK_Right,   ShiftMask|ControlMask,"\033[1;6C",     0,    0},
-	{ XK_Right,    ControlMask|Mod1Mask,"\033[1;7C",     0,    0},
-	{ XK_Right,ShiftMask|ControlMask|Mod1Mask,"\033[1;8C",0,   0},
-	{ XK_Right,         XK_ANY_MOD,     "\033[C",        0,   -1},
-	{ XK_Right,         XK_ANY_MOD,     "\033OC",        0,   +1},
-	{ XK_ISO_Left_Tab,  ShiftMask,      "\033[Z",        0,    0},
-	{ XK_Return,        Mod1Mask,       "\033\r",        0,    0},
-	{ XK_Return,        XK_ANY_MOD,     "\r",            0,    0},
-	{ XK_Insert,        ShiftMask,      "\033[4l",      -1,    0},
-	{ XK_Insert,        ShiftMask,      "\033[2;2~",    +1,    0},
-	{ XK_Insert,        ControlMask,    "\033[L",       -1,    0},
-	{ XK_Insert,        ControlMask,    "\033[2;5~",    +1,    0},
-	{ XK_Insert,        XK_ANY_MOD,     "\033[4h",      -1,    0},
-	{ XK_Insert,        XK_ANY_MOD,     "\033[2~",      +1,    0},
-	{ XK_Delete,        ControlMask,    "\033[M",       -1,    0},
-	{ XK_Delete,        ControlMask,    "\033[3;5~",    +1,    0},
-	{ XK_Delete,        ShiftMask,      "\033[2K",      -1,    0},
-	{ XK_Delete,        ShiftMask,      "\033[3;2~",    +1,    0},
-	{ XK_Delete,        XK_ANY_MOD,     "\033[P",       -1,    0},
-	{ XK_Delete,        XK_ANY_MOD,     "\033[3~",      +1,    0},
-	{ XK_BackSpace,     XK_NO_MOD,      "\177",          0,    0},
-	{ XK_BackSpace,     Mod1Mask,       "\033\177",      0,    0},
-	{ XK_Home,          ShiftMask,      "\033[2J",       0,   -1},
-	{ XK_Home,          ShiftMask,      "\033[1;2H",     0,   +1},
-	{ XK_Home,          XK_ANY_MOD,     "\033[H",        0,   -1},
-	{ XK_Home,          XK_ANY_MOD,     "\033[1~",       0,   +1},
-	{ XK_End,           ControlMask,    "\033[J",       -1,    0},
-	{ XK_End,           ControlMask,    "\033[1;5F",    +1,    0},
-	{ XK_End,           ShiftMask,      "\033[K",       -1,    0},
-	{ XK_End,           ShiftMask,      "\033[1;2F",    +1,    0},
-	{ XK_End,           XK_ANY_MOD,     "\033[4~",       0,    0},
-	{ XK_Prior,         ControlMask,    "\033[5;5~",     0,    0},
-	{ XK_Prior,         ShiftMask,      "\033[5;2~",     0,    0},
-	{ XK_Prior,         XK_ANY_MOD,     "\033[5~",       0,    0},
-	{ XK_Next,          ControlMask,    "\033[6;5~",     0,    0},
-	{ XK_Next,          ShiftMask,      "\033[6;2~",     0,    0},
-	{ XK_Next,          XK_ANY_MOD,     "\033[6~",       0,    0},
-	{ XK_F1,            XK_NO_MOD,      "\033OP" ,       0,    0},
-	{ XK_F1, /* F13 */  ShiftMask,      "\033[1;2P",     0,    0},
-	{ XK_F1, /* F25 */  ControlMask,    "\033[1;5P",     0,    0},
-	{ XK_F1, /* F37 */  Mod4Mask,       "\033[1;6P",     0,    0},
-	{ XK_F1, /* F49 */  Mod1Mask,       "\033[1;3P",     0,    0},
-	{ XK_F1, /* F61 */  Mod3Mask,       "\033[1;4P",     0,    0},
-	{ XK_F2,            XK_NO_MOD,      "\033OQ" ,       0,    0},
-	{ XK_F2, /* F14 */  ShiftMask,      "\033[1;2Q",     0,    0},
-	{ XK_F2, /* F26 */  ControlMask,    "\033[1;5Q",     0,    0},
-	{ XK_F2, /* F38 */  Mod4Mask,       "\033[1;6Q",     0,    0},
-	{ XK_F2, /* F50 */  Mod1Mask,       "\033[1;3Q",     0,    0},
-	{ XK_F2, /* F62 */  Mod3Mask,       "\033[1;4Q",     0,    0},
-	{ XK_F3,            XK_NO_MOD,      "\033OR" ,       0,    0},
-	{ XK_F3, /* F15 */  ShiftMask,      "\033[1;2R",     0,    0},
-	{ XK_F3, /* F27 */  ControlMask,    "\033[1;5R",     0,    0},
-	{ XK_F3, /* F39 */  Mod4Mask,       "\033[1;6R",     0,    0},
-	{ XK_F3, /* F51 */  Mod1Mask,       "\033[1;3R",     0,    0},
-	{ XK_F3, /* F63 */  Mod3Mask,       "\033[1;4R",     0,    0},
-	{ XK_F4,            XK_NO_MOD,      "\033OS" ,       0,    0},
-	{ XK_F4, /* F16 */  ShiftMask,      "\033[1;2S",     0,    0},
-	{ XK_F4, /* F28 */  ControlMask,    "\033[1;5S",     0,    0},
-	{ XK_F4, /* F40 */  Mod4Mask,       "\033[1;6S",     0,    0},
-	{ XK_F4, /* F52 */  Mod1Mask,       "\033[1;3S",     0,    0},
-	{ XK_F5,            XK_NO_MOD,      "\033[15~",      0,    0},
-	{ XK_F5, /* F17 */  ShiftMask,      "\033[15;2~",    0,    0},
-	{ XK_F5, /* F29 */  ControlMask,    "\033[15;5~",    0,    0},
-	{ XK_F5, /* F41 */  Mod4Mask,       "\033[15;6~",    0,    0},
-	{ XK_F5, /* F53 */  Mod1Mask,       "\033[15;3~",    0,    0},
-	{ XK_F6,            XK_NO_MOD,      "\033[17~",      0,    0},
-	{ XK_F6, /* F18 */  ShiftMask,      "\033[17;2~",    0,    0},
-	{ XK_F6, /* F30 */  ControlMask,    "\033[17;5~",    0,    0},
-	{ XK_F6, /* F42 */  Mod4Mask,       "\033[17;6~",    0,    0},
-	{ XK_F6, /* F54 */  Mod1Mask,       "\033[17;3~",    0,    0},
-	{ XK_F7,            XK_NO_MOD,      "\033[18~",      0,    0},
-	{ XK_F7, /* F19 */  ShiftMask,      "\033[18;2~",    0,    0},
-	{ XK_F7, /* F31 */  ControlMask,    "\033[18;5~",    0,    0},
-	{ XK_F7, /* F43 */  Mod4Mask,       "\033[18;6~",    0,    0},
-	{ XK_F7, /* F55 */  Mod1Mask,       "\033[18;3~",    0,    0},
-	{ XK_F8,            XK_NO_MOD,      "\033[19~",      0,    0},
-	{ XK_F8, /* F20 */  ShiftMask,      "\033[19;2~",    0,    0},
-	{ XK_F8, /* F32 */  ControlMask,    "\033[19;5~",    0,    0},
-	{ XK_F8, /* F44 */  Mod4Mask,       "\033[19;6~",    0,    0},
-	{ XK_F8, /* F56 */  Mod1Mask,       "\033[19;3~",    0,    0},
-	{ XK_F9,            XK_NO_MOD,      "\033[20~",      0,    0},
-	{ XK_F9, /* F21 */  ShiftMask,      "\033[20;2~",    0,    0},
-	{ XK_F9, /* F33 */  ControlMask,    "\033[20;5~",    0,    0},
-	{ XK_F9, /* F45 */  Mod4Mask,       "\033[20;6~",    0,    0},
-	{ XK_F9, /* F57 */  Mod1Mask,       "\033[20;3~",    0,    0},
-	{ XK_F10,           XK_NO_MOD,      "\033[21~",      0,    0},
-	{ XK_F10, /* F22 */ ShiftMask,      "\033[21;2~",    0,    0},
-	{ XK_F10, /* F34 */ ControlMask,    "\033[21;5~",    0,    0},
-	{ XK_F10, /* F46 */ Mod4Mask,       "\033[21;6~",    0,    0},
-	{ XK_F10, /* F58 */ Mod1Mask,       "\033[21;3~",    0,    0},
-	{ XK_F11,           XK_NO_MOD,      "\033[23~",      0,    0},
-	{ XK_F11, /* F23 */ ShiftMask,      "\033[23;2~",    0,    0},
-	{ XK_F11, /* F35 */ ControlMask,    "\033[23;5~",    0,    0},
-	{ XK_F11, /* F47 */ Mod4Mask,       "\033[23;6~",    0,    0},
-	{ XK_F11, /* F59 */ Mod1Mask,       "\033[23;3~",    0,    0},
-	{ XK_F12,           XK_NO_MOD,      "\033[24~",      0,    0},
-	{ XK_F12, /* F24 */ ShiftMask,      "\033[24;2~",    0,    0},
-	{ XK_F12, /* F36 */ ControlMask,    "\033[24;5~",    0,    0},
-	{ XK_F12, /* F48 */ Mod4Mask,       "\033[24;6~",    0,    0},
-	{ XK_F12, /* F60 */ Mod1Mask,       "\033[24;3~",    0,    0},
-	{ XK_F13,           XK_NO_MOD,      "\033[1;2P",     0,    0},
-	{ XK_F14,           XK_NO_MOD,      "\033[1;2Q",     0,    0},
-	{ XK_F15,           XK_NO_MOD,      "\033[1;2R",     0,    0},
-	{ XK_F16,           XK_NO_MOD,      "\033[1;2S",     0,    0},
-	{ XK_F17,           XK_NO_MOD,      "\033[15;2~",    0,    0},
-	{ XK_F18,           XK_NO_MOD,      "\033[17;2~",    0,    0},
-	{ XK_F19,           XK_NO_MOD,      "\033[18;2~",    0,    0},
-	{ XK_F20,           XK_NO_MOD,      "\033[19;2~",    0,    0},
-	{ XK_F21,           XK_NO_MOD,      "\033[20;2~",    0,    0},
-	{ XK_F22,           XK_NO_MOD,      "\033[21;2~",    0,    0},
-	{ XK_F23,           XK_NO_MOD,      "\033[23;2~",    0,    0},
-	{ XK_F24,           XK_NO_MOD,      "\033[24;2~",    0,    0},
-	{ XK_F25,           XK_NO_MOD,      "\033[1;5P",     0,    0},
-	{ XK_F26,           XK_NO_MOD,      "\033[1;5Q",     0,    0},
-	{ XK_F27,           XK_NO_MOD,      "\033[1;5R",     0,    0},
-	{ XK_F28,           XK_NO_MOD,      "\033[1;5S",     0,    0},
-	{ XK_F29,           XK_NO_MOD,      "\033[15;5~",    0,    0},
-	{ XK_F30,           XK_NO_MOD,      "\033[17;5~",    0,    0},
-	{ XK_F31,           XK_NO_MOD,      "\033[18;5~",    0,    0},
-	{ XK_F32,           XK_NO_MOD,      "\033[19;5~",    0,    0},
-	{ XK_F33,           XK_NO_MOD,      "\033[20;5~",    0,    0},
-	{ XK_F34,           XK_NO_MOD,      "\033[21;5~",    0,    0},
-	{ XK_F35,           XK_NO_MOD,      "\033[23;5~",    0,    0},
+    /* keysym           mask            string  appkey appcursor */
+    { XKB_KEY_KP_Home,       MOD_MASK_SHIFT,   "\033[2J",       0,   -1},
+    { XKB_KEY_KP_Home,       MOD_MASK_SHIFT,   "\033[1;2H",     0,   +1},
+    { XKB_KEY_KP_Home,       MOD_MASK_ANY,     "\033[H",        0,   -1},
+    { XKB_KEY_KP_Home,       MOD_MASK_ANY,     "\033[1~",       0,   +1},
+    { XKB_KEY_KP_Up,         MOD_MASK_ANY,     "\033Ox",       +1,    0},
+    { XKB_KEY_KP_Up,         MOD_MASK_ANY,     "\033[A",        0,   -1},
+    { XKB_KEY_KP_Up,         MOD_MASK_ANY,     "\033OA",        0,   +1},
+    { XKB_KEY_KP_Down,       MOD_MASK_ANY,     "\033Or",       +1,    0},
+    { XKB_KEY_KP_Down,       MOD_MASK_ANY,     "\033[B",        0,   -1},
+    { XKB_KEY_KP_Down,       MOD_MASK_ANY,     "\033OB",        0,   +1},
+    { XKB_KEY_KP_Left,       MOD_MASK_ANY,     "\033Ot",       +1,    0},
+    { XKB_KEY_KP_Left,       MOD_MASK_ANY,     "\033[D",        0,   -1},
+    { XKB_KEY_KP_Left,       MOD_MASK_ANY,     "\033OD",        0,   +1},
+    { XKB_KEY_KP_Right,      MOD_MASK_ANY,     "\033Ov",       +1,    0},
+    { XKB_KEY_KP_Right,      MOD_MASK_ANY,     "\033[C",        0,   -1},
+    { XKB_KEY_KP_Right,      MOD_MASK_ANY,     "\033OC",        0,   +1},
+    { XKB_KEY_KP_Prior,      MOD_MASK_SHIFT,   "\033[5;2~",     0,    0},
+    { XKB_KEY_KP_Prior,      MOD_MASK_ANY,     "\033[5~",       0,    0},
+    { XKB_KEY_KP_Begin,      MOD_MASK_ANY,     "\033[E",        0,    0},
+    { XKB_KEY_KP_End,        MOD_MASK_CTRL,    "\033[J",       -1,    0},
+    { XKB_KEY_KP_End,        MOD_MASK_CTRL,    "\033[1;5F",    +1,    0},
+    { XKB_KEY_KP_End,        MOD_MASK_SHIFT,   "\033[K",       -1,    0},
+    { XKB_KEY_KP_End,        MOD_MASK_SHIFT,   "\033[1;2F",    +1,    0},
+    { XKB_KEY_KP_End,        MOD_MASK_ANY,     "\033[4~",       0,    0},
+    { XKB_KEY_KP_Next,       MOD_MASK_SHIFT,   "\033[6;2~",     0,    0},
+    { XKB_KEY_KP_Next,       MOD_MASK_ANY,     "\033[6~",       0,    0},
+    { XKB_KEY_KP_Insert,     MOD_MASK_SHIFT,   "\033[2;2~",    +1,    0},
+    { XKB_KEY_KP_Insert,     MOD_MASK_SHIFT,   "\033[4l",      -1,    0},
+    { XKB_KEY_KP_Insert,     MOD_MASK_CTRL,    "\033[L",       -1,    0},
+    { XKB_KEY_KP_Insert,     MOD_MASK_CTRL,    "\033[2;5~",    +1,    0},
+    { XKB_KEY_KP_Insert,     MOD_MASK_ANY,     "\033[4h",      -1,    0},
+    { XKB_KEY_KP_Insert,     MOD_MASK_ANY,     "\033[2~",      +1,    0},
+    { XKB_KEY_KP_Delete,     MOD_MASK_CTRL,    "\033[M",       -1,    0},
+    { XKB_KEY_KP_Delete,     MOD_MASK_CTRL,    "\033[3;5~",    +1,    0},
+    { XKB_KEY_KP_Delete,     MOD_MASK_SHIFT,   "\033[2K",      -1,    0},
+    { XKB_KEY_KP_Delete,     MOD_MASK_SHIFT,   "\033[3;2~",    +1,    0},
+    { XKB_KEY_KP_Delete,     MOD_MASK_ANY,     "\033[P",       -1,    0},
+    { XKB_KEY_KP_Delete,     MOD_MASK_ANY,     "\033[3~",      +1,    0},
+    { XKB_KEY_KP_Multiply,   MOD_MASK_ANY,     "\033Oj",       +2,    0},
+    { XKB_KEY_KP_Add,        MOD_MASK_ANY,     "\033Ok",       +2,    0},
+    { XKB_KEY_KP_Enter,      MOD_MASK_ANY,     "\033OM",       +2,    0},
+    { XKB_KEY_KP_Enter,      MOD_MASK_ANY,     "\r",           -1,    0},
+    { XKB_KEY_KP_Subtract,   MOD_MASK_ANY,     "\033Om",       +2,    0},
+    { XKB_KEY_KP_Decimal,    MOD_MASK_ANY,     "\033On",       +2,    0},
+    { XKB_KEY_KP_Divide,     MOD_MASK_ANY,     "\033Oo",       +2,    0},
+    { XKB_KEY_KP_0,          MOD_MASK_ANY,     "\033Op",       +2,    0},
+    { XKB_KEY_KP_1,          MOD_MASK_ANY,     "\033Oq",       +2,    0},
+    { XKB_KEY_KP_2,          MOD_MASK_ANY,     "\033Or",       +2,    0},
+    { XKB_KEY_KP_3,          MOD_MASK_ANY,     "\033Os",       +2,    0},
+    { XKB_KEY_KP_4,          MOD_MASK_ANY,     "\033Ot",       +2,    0},
+    { XKB_KEY_KP_5,          MOD_MASK_ANY,     "\033Ou",       +2,    0},
+    { XKB_KEY_KP_6,          MOD_MASK_ANY,     "\033Ov",       +2,    0},
+    { XKB_KEY_KP_7,          MOD_MASK_ANY,     "\033Ow",       +2,    0},
+    { XKB_KEY_KP_8,          MOD_MASK_ANY,     "\033Ox",       +2,    0},
+    { XKB_KEY_KP_9,          MOD_MASK_ANY,     "\033Oy",       +2,    0},
+    { XKB_KEY_Up,            MOD_MASK_SHIFT,   "\033[1;2A",     0,    0},
+    { XKB_KEY_Up,            MOD_MASK_ALT,     "\033[1;3A",     0,    0},
+    { XKB_KEY_Up, MOD_MASK_SHIFT|MOD_MASK_ALT, "\033[1;4A",     0,    0},
+    { XKB_KEY_Up,            MOD_MASK_CTRL,    "\033[1;5A",     0,    0},
+    { XKB_KEY_Up, MOD_MASK_SHIFT|MOD_MASK_CTRL,"\033[1;6A",     0,    0},
+    { XKB_KEY_Up, MOD_MASK_CTRL|MOD_MASK_ALT,  "\033[1;7A",     0,    0},
+    { XKB_KEY_Up, MOD_MASK_SHIFT|MOD_MASK_CTRL|MOD_MASK_ALT,"\033[1;8A", 0, 0},
+    { XKB_KEY_Up,            MOD_MASK_ANY,     "\033[A",        0,   -1},
+    { XKB_KEY_Up,            MOD_MASK_ANY,     "\033OA",        0,   +1},
+    { XKB_KEY_Down,          MOD_MASK_SHIFT,   "\033[1;2B",     0,    0},
+    { XKB_KEY_Down,          MOD_MASK_ALT,     "\033[1;3B",     0,    0},
+    { XKB_KEY_Down, MOD_MASK_SHIFT|MOD_MASK_ALT,"\033[1;4B",    0,    0},
+    { XKB_KEY_Down,          MOD_MASK_CTRL,    "\033[1;5B",     0,    0},
+    { XKB_KEY_Down, MOD_MASK_SHIFT|MOD_MASK_CTRL,"\033[1;6B",   0,    0},
+    { XKB_KEY_Down, MOD_MASK_CTRL|MOD_MASK_ALT,"\033[1;7B",     0,    0},
+    { XKB_KEY_Down, MOD_MASK_SHIFT|MOD_MASK_CTRL|MOD_MASK_ALT,"\033[1;8B",0,0},
+    { XKB_KEY_Down,          MOD_MASK_ANY,     "\033[B",        0,   -1},
+    { XKB_KEY_Down,          MOD_MASK_ANY,     "\033OB",        0,   +1},
+    { XKB_KEY_Left,          MOD_MASK_SHIFT,   "\033[1;2D",     0,    0},
+    { XKB_KEY_Left,          MOD_MASK_ALT,     "\033[1;3D",     0,    0},
+    { XKB_KEY_Left, MOD_MASK_SHIFT|MOD_MASK_ALT,"\033[1;4D",    0,    0},
+    { XKB_KEY_Left,          MOD_MASK_CTRL,    "\033[1;5D",     0,    0},
+    { XKB_KEY_Left, MOD_MASK_SHIFT|MOD_MASK_CTRL,"\033[1;6D",   0,    0},
+    { XKB_KEY_Left, MOD_MASK_CTRL|MOD_MASK_ALT,"\033[1;7D",     0,    0},
+    { XKB_KEY_Left, MOD_MASK_SHIFT|MOD_MASK_CTRL|MOD_MASK_ALT,"\033[1;8D",0,0},
+    { XKB_KEY_Left,          MOD_MASK_ANY,     "\033[D",        0,   -1},
+    { XKB_KEY_Left,          MOD_MASK_ANY,     "\033OD",        0,   +1},
+    { XKB_KEY_Right,         MOD_MASK_SHIFT,   "\033[1;2C",     0,    0},
+    { XKB_KEY_Right,         MOD_MASK_ALT,     "\033[1;3C",     0,    0},
+    { XKB_KEY_Right,MOD_MASK_SHIFT|MOD_MASK_ALT,"\033[1;4C",    0,    0},
+    { XKB_KEY_Right,         MOD_MASK_CTRL,    "\033[1;5C",     0,    0},
+    { XKB_KEY_Right,MOD_MASK_SHIFT|MOD_MASK_CTRL,"\033[1;6C",   0,    0},
+    { XKB_KEY_Right,MOD_MASK_CTRL|MOD_MASK_ALT,"\033[1;7C",     0,    0},
+    { XKB_KEY_Right,MOD_MASK_SHIFT|MOD_MASK_CTRL|MOD_MASK_ALT,"\033[1;8C",0,0},
+    { XKB_KEY_Right,         MOD_MASK_ANY,     "\033[C",        0,   -1},
+    { XKB_KEY_Right,         MOD_MASK_ANY,     "\033OC",        0,   +1},
+    { XKB_KEY_ISO_Left_Tab,  MOD_MASK_SHIFT,   "\033[Z",        0,    0},
+    { XKB_KEY_Return,        MOD_MASK_ALT,     "\033\r",        0,    0},
+    { XKB_KEY_Return,        MOD_MASK_ANY,     "\r",            0,    0},
+    { XKB_KEY_Insert,        MOD_MASK_SHIFT,   "\033[4l",      -1,    0},
+    { XKB_KEY_Insert,        MOD_MASK_SHIFT,   "\033[2;2~",    +1,    0},
+    { XKB_KEY_Insert,        MOD_MASK_CTRL,    "\033[L",       -1,    0},
+    { XKB_KEY_Insert,        MOD_MASK_CTRL,    "\033[2;5~",    +1,    0},
+    { XKB_KEY_Insert,        MOD_MASK_ANY,     "\033[4h",      -1,    0},
+    { XKB_KEY_Insert,        MOD_MASK_ANY,     "\033[2~",      +1,    0},
+    { XKB_KEY_Delete,        MOD_MASK_CTRL,    "\033[M",       -1,    0},
+    { XKB_KEY_Delete,        MOD_MASK_CTRL,    "\033[3;5~",    +1,    0},
+    { XKB_KEY_Delete,        MOD_MASK_SHIFT,   "\033[2K",      -1,    0},
+    { XKB_KEY_Delete,        MOD_MASK_SHIFT,   "\033[3;2~",    +1,    0},
+    { XKB_KEY_Delete,        MOD_MASK_ANY,     "\033[P",       -1,    0},
+    { XKB_KEY_Delete,        MOD_MASK_ANY,     "\033[3~",      +1,    0},
+    { XKB_KEY_BackSpace,     MOD_MASK_NONE,    "\177",          0,    0},
+    { XKB_KEY_BackSpace,     MOD_MASK_ALT,     "\033\177",      0,    0},
+    { XKB_KEY_Home,          MOD_MASK_SHIFT,   "\033[2J",       0,   -1},
+    { XKB_KEY_Home,          MOD_MASK_SHIFT,   "\033[1;2H",     0,   +1},
+    { XKB_KEY_Home,          MOD_MASK_ANY,     "\033[H",        0,   -1},
+    { XKB_KEY_Home,          MOD_MASK_ANY,     "\033[1~",       0,   +1},
+    { XKB_KEY_End,           MOD_MASK_CTRL,    "\033[J",       -1,    0},
+    { XKB_KEY_End,           MOD_MASK_CTRL,    "\033[1;5F",    +1,    0},
+    { XKB_KEY_End,           MOD_MASK_SHIFT,   "\033[K",       -1,    0},
+    { XKB_KEY_End,           MOD_MASK_SHIFT,   "\033[1;2F",    +1,    0},
+    { XKB_KEY_End,           MOD_MASK_ANY,     "\033[4~",       0,    0},
+    { XKB_KEY_Prior,         MOD_MASK_CTRL,    "\033[5;5~",     0,    0},
+    { XKB_KEY_Prior,         MOD_MASK_SHIFT,   "\033[5;2~",     0,    0},
+    { XKB_KEY_Prior,         MOD_MASK_ANY,     "\033[5~",       0,    0},
+    { XKB_KEY_Next,          MOD_MASK_CTRL,    "\033[6;5~",     0,    0},
+    { XKB_KEY_Next,          MOD_MASK_SHIFT,   "\033[6;2~",     0,    0},
+    { XKB_KEY_Next,          MOD_MASK_ANY,     "\033[6~",       0,    0},
+    { XKB_KEY_F1,            MOD_MASK_NONE,    "\033OP" ,       0,    0},
+    { XKB_KEY_F1, /* F13 */  MOD_MASK_SHIFT,   "\033[1;2P",     0,    0},
+    { XKB_KEY_F1, /* F25 */  MOD_MASK_CTRL,    "\033[1;5P",     0,    0},
+    { XKB_KEY_F1, /* F37 */  MOD_MASK_LOGO,    "\033[1;6P",     0,    0},
+    { XKB_KEY_F1, /* F49 */  MOD_MASK_ALT,     "\033[1;3P",     0,    0},
+    { XKB_KEY_F2,            MOD_MASK_NONE,    "\033OQ" ,       0,    0},
+    { XKB_KEY_F2, /* F14 */  MOD_MASK_SHIFT,   "\033[1;2Q",     0,    0},
+    { XKB_KEY_F2, /* F26 */  MOD_MASK_CTRL,    "\033[1;5Q",     0,    0},
+    { XKB_KEY_F2, /* F38 */  MOD_MASK_LOGO,    "\033[1;6Q",     0,    0},
+    { XKB_KEY_F2, /* F50 */  MOD_MASK_ALT,     "\033[1;3Q",     0,    0},
+    { XKB_KEY_F3,            MOD_MASK_NONE,    "\033OR" ,       0,    0},
+    { XKB_KEY_F3, /* F15 */  MOD_MASK_SHIFT,   "\033[1;2R",     0,    0},
+    { XKB_KEY_F3, /* F27 */  MOD_MASK_CTRL,    "\033[1;5R",     0,    0},
+    { XKB_KEY_F3, /* F39 */  MOD_MASK_LOGO,    "\033[1;6R",     0,    0},
+    { XKB_KEY_F3, /* F51 */  MOD_MASK_ALT,     "\033[1;3R",     0,    0},
+    { XKB_KEY_F4,            MOD_MASK_NONE,    "\033OS" ,       0,    0},
+    { XKB_KEY_F4, /* F16 */  MOD_MASK_SHIFT,   "\033[1;2S",     0,    0},
+    { XKB_KEY_F4, /* F28 */  MOD_MASK_CTRL,    "\033[1;5S",     0,    0},
+    { XKB_KEY_F4, /* F40 */  MOD_MASK_LOGO,    "\033[1;6S",     0,    0},
+    { XKB_KEY_F4, /* F52 */  MOD_MASK_ALT,     "\033[1;3S",     0,    0},
+    { XKB_KEY_F5,            MOD_MASK_NONE,    "\033[15~",      0,    0},
+    { XKB_KEY_F5, /* F17 */  MOD_MASK_SHIFT,   "\033[15;2~",    0,    0},
+    { XKB_KEY_F5, /* F29 */  MOD_MASK_CTRL,    "\033[15;5~",    0,    0},
+    { XKB_KEY_F5, /* F41 */  MOD_MASK_LOGO,    "\033[15;6~",    0,    0},
+    { XKB_KEY_F5, /* F53 */  MOD_MASK_ALT,     "\033[15;3~",    0,    0},
+    { XKB_KEY_F6,            MOD_MASK_NONE,    "\033[17~",      0,    0},
+    { XKB_KEY_F6, /* F18 */  MOD_MASK_SHIFT,   "\033[17;2~",    0,    0},
+    { XKB_KEY_F6, /* F30 */  MOD_MASK_CTRL,    "\033[17;5~",    0,    0},
+    { XKB_KEY_F6, /* F42 */  MOD_MASK_LOGO,    "\033[17;6~",    0,    0},
+    { XKB_KEY_F6, /* F54 */  MOD_MASK_ALT,     "\033[17;3~",    0,    0},
+    { XKB_KEY_F7,            MOD_MASK_NONE,    "\033[18~",      0,    0},
+    { XKB_KEY_F7, /* F19 */  MOD_MASK_SHIFT,   "\033[18;2~",    0,    0},
+    { XKB_KEY_F7, /* F31 */  MOD_MASK_CTRL,    "\033[18;5~",    0,    0},
+    { XKB_KEY_F7, /* F43 */  MOD_MASK_LOGO,    "\033[18;6~",    0,    0},
+    { XKB_KEY_F7, /* F55 */  MOD_MASK_ALT,     "\033[18;3~",    0,    0},
+    { XKB_KEY_F8,            MOD_MASK_NONE,    "\033[19~",      0,    0},
+    { XKB_KEY_F8, /* F20 */  MOD_MASK_SHIFT,   "\033[19;2~",    0,    0},
+    { XKB_KEY_F8, /* F32 */  MOD_MASK_CTRL,    "\033[19;5~",    0,    0},
+    { XKB_KEY_F8, /* F44 */  MOD_MASK_LOGO,    "\033[19;6~",    0,    0},
+    { XKB_KEY_F8, /* F56 */  MOD_MASK_ALT,     "\033[19;3~",    0,    0},
+    { XKB_KEY_F9,            MOD_MASK_NONE,    "\033[20~",      0,    0},
+    { XKB_KEY_F9, /* F21 */  MOD_MASK_SHIFT,   "\033[20;2~",    0,    0},
+    { XKB_KEY_F9, /* F33 */  MOD_MASK_CTRL,    "\033[20;5~",    0,    0},
+    { XKB_KEY_F9, /* F45 */  MOD_MASK_LOGO,    "\033[20;6~",    0,    0},
+    { XKB_KEY_F9, /* F57 */  MOD_MASK_ALT,     "\033[20;3~",    0,    0},
+    { XKB_KEY_F10,           MOD_MASK_NONE,    "\033[21~",      0,    0},
+    { XKB_KEY_F10, /* F22 */ MOD_MASK_SHIFT,   "\033[21;2~",    0,    0},
+    { XKB_KEY_F10, /* F34 */ MOD_MASK_CTRL,    "\033[21;5~",    0,    0},
+    { XKB_KEY_F10, /* F46 */ MOD_MASK_LOGO,    "\033[21;6~",    0,    0},
+    { XKB_KEY_F10, /* F58 */ MOD_MASK_ALT,     "\033[21;3~",    0,    0},
+    { XKB_KEY_F11,           MOD_MASK_NONE,    "\033[23~",      0,    0},
+    { XKB_KEY_F11, /* F23 */ MOD_MASK_SHIFT,   "\033[23;2~",    0,    0},
+    { XKB_KEY_F11, /* F35 */ MOD_MASK_CTRL,    "\033[23;5~",    0,    0},
+    { XKB_KEY_F11, /* F47 */ MOD_MASK_LOGO,    "\033[23;6~",    0,    0},
+    { XKB_KEY_F11, /* F59 */ MOD_MASK_ALT,     "\033[23;3~",    0,    0},
+    { XKB_KEY_F12,           MOD_MASK_NONE,    "\033[24~",      0,    0},
+    { XKB_KEY_F12, /* F24 */ MOD_MASK_SHIFT,   "\033[24;2~",    0,    0},
+    { XKB_KEY_F12, /* F36 */ MOD_MASK_CTRL,    "\033[24;5~",    0,    0},
+    { XKB_KEY_F12, /* F48 */ MOD_MASK_LOGO,    "\033[24;6~",    0,    0},
+    { XKB_KEY_F12, /* F60 */ MOD_MASK_ALT,     "\033[24;3~",    0,    0},
+    { XKB_KEY_F13,           MOD_MASK_NONE,    "\033[1;2P",     0,    0},
+    { XKB_KEY_F14,           MOD_MASK_NONE,    "\033[1;2Q",     0,    0},
+    { XKB_KEY_F15,           MOD_MASK_NONE,    "\033[1;2R",     0,    0},
+    { XKB_KEY_F16,           MOD_MASK_NONE,    "\033[1;2S",     0,    0},
+    { XKB_KEY_F17,           MOD_MASK_NONE,    "\033[15;2~",    0,    0},
+    { XKB_KEY_F18,           MOD_MASK_NONE,    "\033[17;2~",    0,    0},
+    { XKB_KEY_F19,           MOD_MASK_NONE,    "\033[18;2~",    0,    0},
+    { XKB_KEY_F20,           MOD_MASK_NONE,    "\033[19;2~",    0,    0},
+    { XKB_KEY_F21,           MOD_MASK_NONE,    "\033[20;2~",    0,    0},
+    { XKB_KEY_F22,           MOD_MASK_NONE,    "\033[21;2~",    0,    0},
+    { XKB_KEY_F23,           MOD_MASK_NONE,    "\033[23;2~",    0,    0},
+    { XKB_KEY_F24,           MOD_MASK_NONE,    "\033[24;2~",    0,    0},
+    { XKB_KEY_F25,           MOD_MASK_NONE,    "\033[1;5P",     0,    0},
+    { XKB_KEY_F26,           MOD_MASK_NONE,    "\033[1;5Q",     0,    0},
+    { XKB_KEY_F27,           MOD_MASK_NONE,    "\033[1;5R",     0,    0},
+    { XKB_KEY_F28,           MOD_MASK_NONE,    "\033[1;5S",     0,    0},
+    { XKB_KEY_F29,           MOD_MASK_NONE,    "\033[15;5~",    0,    0},
+    { XKB_KEY_F30,           MOD_MASK_NONE,    "\033[17;5~",    0,    0},
+    { XKB_KEY_F31,           MOD_MASK_NONE,    "\033[18;5~",    0,    0},
+    { XKB_KEY_F32,           MOD_MASK_NONE,    "\033[19;5~",    0,    0},
+    { XKB_KEY_F33,           MOD_MASK_NONE,    "\033[20;5~",    0,    0},
+    { XKB_KEY_F34,           MOD_MASK_NONE,    "\033[21;5~",    0,    0},
+    { XKB_KEY_F35,           MOD_MASK_NONE,    "\033[23;5~",    0,    0},
 };
 
 /*
@@ -461,7 +449,7 @@ static Key key[] = {
  * If no match is found, regular selection is used.
  */
 static uint selmasks[] = {
-	[SEL_RECTANGULAR] = Mod1Mask,
+    [SEL_RECTANGULAR] = MOD_MASK_ALT,
 };
 
 /*
@@ -469,6 +457,6 @@ static uint selmasks[] = {
  * of single wide characters.
  */
 static char ascii_printable[] =
-	" !\"#$%&'()*+,-./0123456789:;<=>?"
-	"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"
-	"`abcdefghijklmnopqrstuvwxyz{|}~";
+    " !\"#$%&'()*+,-./0123456789:;<=>?"
+    "@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_"
+    "`abcdefghijklmnopqrstuvwxyz{|}~";
